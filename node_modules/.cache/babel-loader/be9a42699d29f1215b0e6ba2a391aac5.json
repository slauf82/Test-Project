{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar Popover = require('./popover-follow');\n\nvar Slider = require('./slider-core');\n\nvar isFunction = require('lodash/isFunction');\n\nvar classnames = require('classnames');\n\nvar isUndefined = require('lodash/isUndefined');\n\nmodule.exports = React.createClass({\n  displayName: 'nw-slider',\n  propTypes: {\n    value: React.PropTypes.number,\n    min: React.PropTypes.number,\n    max: React.PropTypes.number,\n    ticks: React.PropTypes.bool,\n    onChange: React.PropTypes.func,\n    onDragStart: React.PropTypes.func,\n    onDragEnd: React.PropTypes.func,\n    triggerOnChangeWhileDragging: React.PropTypes.bool,\n    markerLabel: React.PropTypes.array,\n    displayFollowerPopover: React.PropTypes.bool\n  },\n  getInitialState: function getInitialState() {\n    return {\n      rtPosition: undefined,\n      handleWidth: undefined\n    };\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    if (isUndefined(this.state.handleWidth) && this.refs.slider.refs.handle) {\n      this.setState({\n        handleWidth: this.refs.slider.refs.handle.offsetWidth\n      }); // eslint-disable-line\n    }\n  },\n  handleSliderChange: function handleSliderChange(value, rtPosition) {\n    if (isFunction(this.props.onChange)) {\n      // Send the value and position of the slider in case the container needs it.\n      this.props.onChange(value, rtPosition);\n    }\n\n    this.setState({\n      rtPosition: rtPosition\n    });\n  },\n  render: function render() {\n    var trackWidth = this.refs.slider && this.refs.slider.state.trackWidth;\n    var handleWidth = this.state.handleWidth;\n    var dragging = this.refs.slider && this.refs.slider.state.dragging;\n    var follower = this.props.displayFollowerPopover && !isUndefined(this.state.rtPosition) ? React.createElement(Popover, {\n      trackWidth: trackWidth,\n      handleWidth: handleWidth,\n      value: this.props.value,\n      position: this.state.rtPosition\n    }) : React.createElement('span', null);\n    return React.createElement('div', {\n      className: classnames('slider-container-component', {\n        dragging: dragging\n      })\n    }, React.createElement(Slider, {\n      ref: 'slider',\n      min: this.props.min,\n      max: this.props.max,\n      value: this.props.value,\n      onChange: this.handleSliderChange,\n      onDragStart: this.props.onDragStart,\n      onDragEnd: this.props.onDragEnd,\n      triggerOnChangeWhileDragging: this.props.triggerOnChangeWhileDragging,\n      ticks: this.props.ticks,\n      markerLabel: this.props.markerLabel\n    }), follower);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}