{"version":3,"file":"index.modern.js","sources":["../src/reducer/focusReducer.ts","../src/hooks/useScroll.ts","../src/index.tsx"],"sourcesContent":["type FocusStateType = {\n  isFocus: boolean\n  focusIndex: number\n}\n\ntype Action =\n  | { type: 'setFocusIndex'; focusIndex: number }\n  | { type: 'toggleFocus'; isFocus: boolean }\n\nconst initialState: FocusStateType = {\n  isFocus: false,\n  focusIndex: -1\n}\n\nconst focusReducer = (state: FocusStateType, action: Action) => {\n  switch (action.type) {\n    case 'setFocusIndex':\n      return { ...state, focusIndex: action.focusIndex }\n    case 'toggleFocus':\n      return { ...state, isFocus: action.isFocus }\n    default:\n      return state\n  }\n}\n\nexport { initialState, focusReducer }\n","// eslint-disable-next-line no-unused-vars\nimport { useEffect, RefObject } from 'react'\n\nconst useScroll = (\n  focusedIndex: number,\n  scrollableContainer: RefObject<HTMLDivElement>,\n  listContainer: RefObject<HTMLUListElement>\n) => {\n  useEffect(() => {\n    if (\n      listContainer.current &&\n      scrollableContainer.current &&\n      focusedIndex >= 0\n    ) {\n      if (focusedIndex === 0)\n        scrollableContainer.current.scrollTo({\n          top: 0\n        })\n      const children = listContainer.current.childNodes\n      const focusedChild =\n        children && children.length\n          ? (children[focusedIndex] as HTMLDivElement)\n          : null\n\n      if (focusedChild && focusedChild.getBoundingClientRect) {\n        const { height: optionHeight } = focusedChild.getBoundingClientRect()\n        const {\n          height: listHeight\n        } = scrollableContainer.current.getBoundingClientRect()\n        const scrollTop = scrollableContainer.current.scrollTop\n        const isAbove = focusedChild.offsetTop <= scrollTop\n        const isInView =\n          focusedChild.offsetTop >= scrollTop &&\n          focusedChild.offsetTop + optionHeight <= scrollTop + listHeight\n\n        if (!isInView) {\n          if (isAbove) {\n            scrollableContainer.current.scrollTo({\n              top: focusedChild.offsetTop\n            })\n          } else {\n            scrollableContainer.current.scrollTo({\n              top: focusedChild.offsetTop - listHeight + optionHeight\n            })\n          }\n        }\n      }\n    }\n  }, [focusedIndex, listContainer, scrollableContainer])\n}\n\nexport default useScroll\n","/* eslint-disable no-unused-vars */\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  useReducer,\n  ReactElement\n} from 'react'\n\nimport { initialState, focusReducer } from './reducer/focusReducer'\nimport styles from './index.css'\nimport useScroll from './hooks/useScroll'\n\ntype ComboBoxProps = {\n  options: string[]\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n  defaultValue?: string\n  placeholder?: string\n  onSelect?: (option: string) => void\n  onOptionsChange?: (option: string) => void\n  optionsListMaxHeight?: number\n  renderOptions?: (option: string) => React.ReactNode\n  style?: React.CSSProperties\n  optionsClassName?: string\n  inputClassName?: string\n  className?: string\n  listClassName?: string\n  popoverClassName?: string\n  highlightColor?: string\n  selectedOptionColor?: string\n  enableAutocomplete?: boolean\n  inputStyles?: React.CSSProperties\n  name?: string\n  onBlur?: (event?: React.ChangeEvent<HTMLInputElement>) => void\n  editable?: boolean\n  renderRightElement?: () => ReactElement\n  renderLeftElement?: () => ReactElement\n}\n\nconst UP_ARROW = 38\nconst DOWN_ARROW = 40\nconst ENTER_KEY = 13\nconst ESCAPE_KEY = 27\n\nconst ComboBox: React.FC<ComboBoxProps> = ({\n  options: comboBoxOptions,\n  onChange,\n  defaultValue,\n  placeholder,\n  onSelect,\n  onOptionsChange,\n  optionsListMaxHeight,\n  renderOptions,\n  style,\n  inputClassName,\n  className,\n  listClassName,\n  optionsClassName,\n  popoverClassName,\n  highlightColor,\n  selectedOptionColor,\n  enableAutocomplete,\n  inputStyles,\n  name,\n  onBlur,\n  editable = true,\n  renderRightElement,\n  renderLeftElement\n}) => {\n  const optionMaxHeight = optionsListMaxHeight || 200\n  let suggestionListPositionStyles: React.CSSProperties = {}\n\n  // Function that will check whether the defaultIndex falls inside the length of the options\n  // or else it will return -1\n\n  const [options, setOptions] = useState<string[]>(comboBoxOptions)\n  const [inputValue, setInputValue] = useState(defaultValue || '')\n  const [state, dispatch] = useReducer(focusReducer, initialState)\n  const { isFocus, focusIndex } = state\n  const [isMouseInsideOptions, setIsMouseInsideOptions] = useState(false) // This is used to determine whether the mouse cursor is inside or outside options container\n  const [IsOptionsPositionedTop, setIsOptionsPositionedTop] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(-1)\n\n  const dropdownRef = useRef<HTMLDivElement | null>(null)\n  const optionsListRef = useRef<HTMLUListElement>(null)\n\n  useEffect(() => {\n    setOptions(comboBoxOptions)\n  }, [comboBoxOptions])\n\n  useEffect(() => {\n    if (!isFocus) setInputValue(defaultValue || '')\n    dispatch({\n      type: 'setFocusIndex',\n      focusIndex: defaultValue ? options.indexOf(defaultValue.toString()) : -1\n    })\n    setSelectedOptionIndex(\n      defaultValue ? options.indexOf(defaultValue.toString()) : -1\n    )\n  }, [defaultValue])\n\n  useScroll(focusIndex, dropdownRef, optionsListRef)\n\n  useEffect(() => {\n    // Position the options container top or bottom based on the space available\n    const optionsContainerElement: any = dropdownRef.current\n\n    const offsetBottom =\n      window.innerHeight -\n      optionsContainerElement?.offsetParent?.getBoundingClientRect().top\n\n    if (\n      optionMaxHeight > offsetBottom &&\n      optionsContainerElement?.offsetParent?.getBoundingClientRect().top >\n        offsetBottom\n    ) {\n      setIsOptionsPositionedTop(true)\n    } else {\n      setIsOptionsPositionedTop(false)\n    }\n  }, [isFocus])\n\n  if (IsOptionsPositionedTop)\n    suggestionListPositionStyles = {\n      bottom: '100%',\n      marginBottom: '5px'\n    }\n  else\n    suggestionListPositionStyles = {\n      top: '100%',\n      marginTop: '5px'\n    }\n\n  const blurHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!isMouseInsideOptions) dispatch({ type: 'toggleFocus', isFocus: false })\n    if (onBlur) onBlur(event)\n  }\n\n  const updateValue = (index: number = focusIndex) => {\n    if (index !== -1) {\n      setInputValue(options[index])\n      if (onOptionsChange) onOptionsChange(options[index])\n    }\n  }\n\n  // While searching, the options are filtered and the index also changed.\n  // So the focus index is set to original based on all the options.\n  const resetFocusIndex = () => {\n    comboBoxOptions.forEach((option: string, index: number) => {\n      if (option === options[focusIndex])\n        dispatch({\n          type: 'setFocusIndex',\n          focusIndex: index\n        })\n    })\n  }\n\n  const selectSuggestionHandler = () => {\n    updateValue()\n    dispatch({ type: 'toggleFocus', isFocus: false })\n    setSelectedOptionIndex(focusIndex)\n    resetFocusIndex()\n    setOptions(comboBoxOptions)\n\n    if (onSelect) onSelect(options[focusIndex])\n  }\n\n  const keyHandler = (event: any) => {\n    const optionsContainerElement: any = dropdownRef.current\n    let newFocusIndex = focusIndex\n\n    switch (event.keyCode) {\n      case DOWN_ARROW: {\n        event.preventDefault()\n\n        // set the focus to true if the options list was not opened.\n        // Also set the scroll top\n        if (!isFocus) {\n          dispatch({ type: 'toggleFocus', isFocus: true })\n        } else {\n          // If the focus reaches the end of the options in the list, set the focus to 0\n\n          if (focusIndex >= options.length - 1) {\n            newFocusIndex = 0\n            optionsContainerElement.scrollTop = 0\n          }\n          // Change the scroll position based on the selected option position\n          else {\n            newFocusIndex = focusIndex + 1\n          }\n        }\n        dispatch({\n          type: 'setFocusIndex',\n          focusIndex: newFocusIndex\n        })\n\n        if (onOptionsChange) onOptionsChange(options[newFocusIndex])\n        dropdownRef.current = optionsContainerElement\n        break\n      }\n      case UP_ARROW: {\n        event.preventDefault()\n\n        // set the focus to true if the options list was not opened.\n        if (!isFocus) {\n          dispatch({ type: 'toggleFocus', isFocus: true })\n        } else {\n          // If the focus falls beyond the start of the options in the list, set the focus to height of the suggestion-list\n          if (focusIndex <= 0) {\n            newFocusIndex = options.length - 1\n\n            if (optionsContainerElement)\n              optionsContainerElement.scrollTop =\n                optionsContainerElement.scrollHeight\n          } else {\n            newFocusIndex = focusIndex - 1\n          }\n        }\n        dispatch({\n          type: 'setFocusIndex',\n          focusIndex: newFocusIndex\n        })\n\n        if (onOptionsChange) onOptionsChange(options[newFocusIndex])\n        dropdownRef.current = optionsContainerElement\n        break\n      }\n      case ENTER_KEY: {\n        event.preventDefault()\n        if (focusIndex > -1 && focusIndex < options.length)\n          selectSuggestionHandler()\n\n        break\n      }\n      case ESCAPE_KEY: {\n        event.target.blur()\n        dispatch({ type: 'toggleFocus', isFocus: false })\n        break\n      }\n    }\n  }\n\n  const filterSuggestion = (filterText: string) => {\n    if (filterText.length === 0) setOptions(comboBoxOptions)\n    else {\n      const filteredSuggestion = comboBoxOptions.filter((option) => {\n        return option.toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n      })\n      setOptions(filteredSuggestion)\n    }\n  }\n\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) onChange(event)\n    setInputValue(event.target.value)\n    if (enableAutocomplete) filterSuggestion(event.target.value)\n  }\n\n  const inputClickHandler = () => {\n    dispatch({\n      type: 'toggleFocus',\n      isFocus: true\n    })\n    dispatch({\n      type: 'setFocusIndex',\n      focusIndex: options.indexOf(inputValue.toString())\n    })\n  }\n\n  const focusHandler = () => {\n    dispatch({ type: 'toggleFocus', isFocus: true })\n  }\n\n  const mouseEnterHandler = (index: number) => {\n    dispatch({ type: 'setFocusIndex', focusIndex: index })\n    if (onOptionsChange) onOptionsChange(options[index])\n  }\n\n  const backgroundColorSelector = (optionIndex: number) => {\n    if (optionIndex === focusIndex && optionIndex === selectedOptionIndex)\n      return { backgroundColor: selectedOptionColor || '#63b3ed' }\n    else if (optionIndex === focusIndex) {\n      return { backgroundColor: highlightColor || '#bee3f8' }\n    } else if (optionIndex === selectedOptionIndex) {\n      return { backgroundColor: selectedOptionColor || '#63b3ed' }\n    } else return {}\n  }\n\n  return (\n    <div\n      className={\n        className ? `${styles.comboBox} ${className}` : styles.comboBox\n      }\n      style={style}\n    >\n      {renderLeftElement && (\n        <div className={styles.leftElement}>{renderLeftElement()}</div>\n      )}\n      <input\n        onFocus={focusHandler}\n        onChange={inputChangeHandler}\n        placeholder={placeholder || ''}\n        onKeyDown={keyHandler}\n        value={inputValue}\n        className={\n          inputClassName\n            ? `${styles.comboBoxInput} ${inputClassName}`\n            : styles.comboBoxInput\n        }\n        onBlur={blurHandler}\n        name={name}\n        style={{\n          ...inputStyles,\n          cursor: editable ? 'text' : 'pointer',\n          paddingLeft: renderLeftElement ? 30 : 10\n        }}\n        readOnly={!editable}\n        onClick={inputClickHandler}\n      />\n      {renderRightElement && (\n        <div className={styles.rightElement}>{renderRightElement()}</div>\n      )}\n      <div\n        className={\n          popoverClassName\n            ? `${styles.comboBoxPopover} ${popoverClassName}`\n            : styles.comboBoxPopover\n        }\n        style={{\n          opacity: isFocus ? 1 : 0,\n          visibility: isFocus ? 'visible' : 'hidden',\n          maxHeight: isFocus ? optionMaxHeight : 0,\n          ...suggestionListPositionStyles\n        }}\n        ref={dropdownRef}\n        onMouseEnter={() => setIsMouseInsideOptions(true)}\n        onMouseLeave={() => setIsMouseInsideOptions(false)}\n      >\n        <ul\n          className={\n            listClassName\n              ? `${styles.comboBoxList} ${listClassName}`\n              : styles.comboBoxList\n          }\n          ref={optionsListRef}\n        >\n          {options.map((option, index) => {\n            return (\n              <li\n                className={\n                  optionsClassName\n                    ? `${styles.comboBoxOption} ${optionsClassName}`\n                    : styles.comboBoxOption\n                }\n                key={option}\n                style={{\n                  ...backgroundColorSelector(index)\n                }}\n                onClick={() => selectSuggestionHandler()}\n                onMouseDown={(e) => e.preventDefault()}\n                onMouseEnter={() => mouseEnterHandler(index)}\n              >\n                {renderOptions ? renderOptions(option) : option}\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default ComboBox\n"],"names":["initialState","isFocus","focusIndex","focusReducer","state","action","type","useScroll","focusedIndex","scrollableContainer","listContainer","useEffect","current","scrollTo","top","children","childNodes","focusedChild","length","getBoundingClientRect","optionHeight","height","listHeight","scrollTop","isAbove","offsetTop","isInView","UP_ARROW","DOWN_ARROW","ENTER_KEY","ESCAPE_KEY","ComboBox","comboBoxOptions","options","onChange","defaultValue","placeholder","onSelect","onOptionsChange","optionsListMaxHeight","renderOptions","style","inputClassName","className","listClassName","optionsClassName","popoverClassName","highlightColor","selectedOptionColor","enableAutocomplete","inputStyles","name","onBlur","editable","renderRightElement","renderLeftElement","optionMaxHeight","suggestionListPositionStyles","useState","setOptions","inputValue","setInputValue","useReducer","dispatch","isMouseInsideOptions","setIsMouseInsideOptions","IsOptionsPositionedTop","setIsOptionsPositionedTop","selectedOptionIndex","setSelectedOptionIndex","dropdownRef","useRef","optionsListRef","indexOf","toString","optionsContainerElement","offsetBottom","window","innerHeight","offsetParent","bottom","marginBottom","marginTop","blurHandler","event","updateValue","index","resetFocusIndex","forEach","option","selectSuggestionHandler","keyHandler","newFocusIndex","keyCode","preventDefault","scrollHeight","target","blur","filterSuggestion","filterText","filteredSuggestion","filter","toLowerCase","inputChangeHandler","value","inputClickHandler","focusHandler","mouseEnterHandler","backgroundColorSelector","optionIndex","backgroundColor","React","styles","comboBox","leftElement","onFocus","onKeyDown","comboBoxInput","cursor","paddingLeft","readOnly","onClick","rightElement","comboBoxPopover","opacity","visibility","maxHeight","ref","onMouseEnter","onMouseLeave","comboBoxList","map","comboBoxOption","key","onMouseDown","e"],"mappings":"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"}